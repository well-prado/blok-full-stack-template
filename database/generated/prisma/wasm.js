
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  passwordHash: 'passwordHash',
  name: 'name',
  role: 'role',
  emailVerified: 'emailVerified',
  profileImage: 'profileImage',
  preferences: 'preferences',
  twoFactorEnabled: 'twoFactorEnabled',
  twoFactorSecret: 'twoFactorSecret',
  backupCodes: 'backupCodes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  title: 'title',
  message: 'message',
  type: 'type',
  priority: 'priority',
  isRead: 'isRead',
  readAt: 'readAt',
  metadata: 'metadata',
  sourceWorkflow: 'sourceWorkflow',
  sourceNode: 'sourceNode',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  action: 'action',
  resource: 'resource',
  resourceId: 'resourceId',
  details: 'details',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  success: 'success',
  errorMessage: 'errorMessage',
  createdAt: 'createdAt'
};

exports.Prisma.SystemLogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  userEmail: 'userEmail',
  userName: 'userName',
  userRole: 'userRole',
  action: 'action',
  actionType: 'actionType',
  resourceType: 'resourceType',
  resourceId: 'resourceId',
  resourceName: 'resourceName',
  httpMethod: 'httpMethod',
  endpoint: 'endpoint',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  details: 'details',
  changesSummary: 'changesSummary',
  workflowName: 'workflowName',
  nodeName: 'nodeName',
  executionTimeMs: 'executionTimeMs',
  statusCode: 'statusCode',
  success: 'success',
  riskLevel: 'riskLevel',
  complianceFlags: 'complianceFlags',
  createdAt: 'createdAt'
};

exports.Prisma.LogRetentionPolicyScalarFieldEnum = {
  id: 'id',
  retentionDays: 'retentionDays',
  archiveDays: 'archiveDays',
  lastCleanup: 'lastCleanup',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PasswordResetScalarFieldEnum = {
  id: 'id',
  email: 'email',
  token: 'token',
  expiresAt: 'expiresAt',
  used: 'used',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  ADMIN: 'ADMIN',
  USER: 'USER'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  INFO: 'INFO',
  SUCCESS: 'SUCCESS',
  WARNING: 'WARNING',
  ERROR: 'ERROR',
  SYSTEM: 'SYSTEM'
};

exports.Priority = exports.$Enums.Priority = {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  URGENT: 'URGENT'
};

exports.LogRiskLevel = exports.$Enums.LogRiskLevel = {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  CRITICAL: 'CRITICAL'
};

exports.Prisma.ModelName = {
  User: 'User',
  Session: 'Session',
  Notification: 'Notification',
  AuditLog: 'AuditLog',
  SystemLog: 'SystemLog',
  LogRetentionPolicy: 'LogRetentionPolicy',
  PasswordReset: 'PasswordReset'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/wellingtonprado/Projects/Personal/blok-full-stack-template/database/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/wellingtonprado/Projects/Personal/blok-full-stack-template/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": null,
        "value": "file:../database/app.db"
      }
    }
  },
  "inlineSchema": "// Blok Framework - Prisma Schema\n// Complete database schema for full-stack applications\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../database/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = \"file:../database/app.db\"\n}\n\n// Enums for type safety\nenum Role {\n  ADMIN\n  USER\n}\n\nenum NotificationType {\n  INFO\n  SUCCESS\n  WARNING\n  ERROR\n  SYSTEM\n}\n\nenum Priority {\n  LOW\n  MEDIUM\n  HIGH\n  URGENT\n}\n\nenum LogRiskLevel {\n  LOW\n  MEDIUM\n  HIGH\n  CRITICAL\n}\n\n// Users table - Core authentication and user management\nmodel User {\n  id               String   @id @default(uuid())\n  email            String   @unique(map: \"users_email_unique\")\n  passwordHash     String   @map(\"password_hash\")\n  name             String\n  role             Role     @default(USER)\n  emailVerified    Boolean  @default(false) @map(\"email_verified\")\n  profileImage     String?  @map(\"profile_image\")\n  preferences      String? // JSON string for user preferences\n  twoFactorEnabled Boolean  @default(false) @map(\"two_factor_enabled\")\n  twoFactorSecret  String?  @map(\"two_factor_secret\")\n  backupCodes      String?  @map(\"backup_codes\") // JSON array\n  createdAt        DateTime @default(now()) @map(\"created_at\")\n  updatedAt        DateTime @updatedAt @map(\"updated_at\")\n\n  // Relations\n  sessions      Session[]\n  notifications Notification[]\n\n  @@map(\"users\")\n}\n\n// Sessions table - User authentication sessions\nmodel Session {\n  id        String   @id @default(uuid())\n  userId    String   @map(\"user_id\")\n  token     String   @unique(map: \"sessions_token_unique\")\n  expiresAt DateTime @map(\"expires_at\")\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  // Relations\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@map(\"sessions\")\n}\n\n// Notifications table - User notifications system\nmodel Notification {\n  id             String           @id @default(uuid())\n  userId         String           @map(\"user_id\")\n  title          String\n  message        String\n  type           NotificationType @default(INFO)\n  priority       Priority         @default(MEDIUM)\n  isRead         Boolean          @default(false) @map(\"is_read\")\n  readAt         DateTime?        @map(\"read_at\")\n  metadata       String? // JSON string for additional data\n  sourceWorkflow String?          @map(\"source_workflow\")\n  sourceNode     String?          @map(\"source_node\")\n  expiresAt      DateTime?        @map(\"expires_at\")\n  createdAt      DateTime         @default(now()) @map(\"created_at\")\n\n  // Relations\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@map(\"notifications\")\n}\n\n// Audit logs table - Security and compliance logging\nmodel AuditLog {\n  id           String   @id @default(uuid())\n  userId       String?  @map(\"user_id\")\n  action       String\n  resource     String?\n  resourceId   String?  @map(\"resource_id\")\n  details      String? // JSON string\n  ipAddress    String?  @map(\"ip_address\")\n  userAgent    String?  @map(\"user_agent\")\n  success      Boolean  @default(true)\n  errorMessage String?  @map(\"error_message\")\n  createdAt    DateTime @default(now()) @map(\"created_at\")\n\n  @@map(\"audit_logs\")\n}\n\n// System logs table - Application activity logging\nmodel SystemLog {\n  id              String       @id @default(uuid())\n  userId          String       @map(\"user_id\")\n  userEmail       String       @map(\"user_email\")\n  userName        String       @map(\"user_name\")\n  userRole        String       @map(\"user_role\")\n  action          String\n  actionType      String       @map(\"action_type\")\n  resourceType    String       @map(\"resource_type\")\n  resourceId      String?      @map(\"resource_id\")\n  resourceName    String?      @map(\"resource_name\")\n  httpMethod      String       @map(\"http_method\")\n  endpoint        String\n  ipAddress       String       @map(\"ip_address\")\n  userAgent       String       @map(\"user_agent\")\n  details         String? // JSON string\n  changesSummary  String?      @map(\"changes_summary\") // JSON string\n  workflowName    String?      @map(\"workflow_name\")\n  nodeName        String?      @map(\"node_name\")\n  executionTimeMs Int?         @map(\"execution_time_ms\")\n  statusCode      Int          @map(\"status_code\")\n  success         Boolean      @default(true)\n  riskLevel       LogRiskLevel @map(\"risk_level\")\n  complianceFlags String?      @map(\"compliance_flags\") // JSON string\n  createdAt       DateTime     @default(now()) @map(\"created_at\")\n\n  @@index([userId])\n  @@index([createdAt])\n  @@index([riskLevel])\n  @@index([success])\n  @@map(\"system_logs\")\n}\n\n// Log retention policy table - Data lifecycle management\nmodel LogRetentionPolicy {\n  id            String    @id @default(uuid())\n  retentionDays Int       @map(\"retention_days\")\n  archiveDays   Int       @map(\"archive_days\")\n  lastCleanup   DateTime? @map(\"last_cleanup\")\n  createdAt     DateTime  @default(now()) @map(\"created_at\")\n  updatedAt     DateTime  @updatedAt @map(\"updated_at\")\n\n  @@map(\"log_retention_policy\")\n}\n\n// Password reset tokens table - Secure password recovery\nmodel PasswordReset {\n  id        String   @id @default(uuid())\n  email     String\n  token     String   @unique\n  expiresAt DateTime @map(\"expires_at\")\n  used      Boolean  @default(false)\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  @@map(\"password_resets\")\n}\n",
  "inlineSchemaHash": "068601602ee064e84647dea284538fc7947e0bfda613defdaa544bf1f88479ba",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"password_hash\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"email_verified\"},{\"name\":\"profileImage\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"profile_image\"},{\"name\":\"preferences\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"twoFactorEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"two_factor_enabled\"},{\"name\":\"twoFactorSecret\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"two_factor_secret\"},{\"name\":\"backupCodes\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"backup_codes\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToUser\"}],\"dbName\":\"users\"},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"expires_at\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"}],\"dbName\":\"sessions\"},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"NotificationType\"},{\"name\":\"priority\",\"kind\":\"enum\",\"type\":\"Priority\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_read\"},{\"name\":\"readAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"read_at\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sourceWorkflow\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"source_workflow\"},{\"name\":\"sourceNode\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"source_node\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"expires_at\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationToUser\"}],\"dbName\":\"notifications\"},\"AuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resource\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resourceId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"resource_id\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ip_address\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_agent\"},{\"name\":\"success\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"error_message\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"}],\"dbName\":\"audit_logs\"},\"SystemLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"userEmail\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_email\"},{\"name\":\"userName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_name\"},{\"name\":\"userRole\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_role\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"actionType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"action_type\"},{\"name\":\"resourceType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"resource_type\"},{\"name\":\"resourceId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"resource_id\"},{\"name\":\"resourceName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"resource_name\"},{\"name\":\"httpMethod\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"http_method\"},{\"name\":\"endpoint\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ip_address\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_agent\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"changesSummary\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"changes_summary\"},{\"name\":\"workflowName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"workflow_name\"},{\"name\":\"nodeName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"node_name\"},{\"name\":\"executionTimeMs\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"execution_time_ms\"},{\"name\":\"statusCode\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"status_code\"},{\"name\":\"success\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"riskLevel\",\"kind\":\"enum\",\"type\":\"LogRiskLevel\",\"dbName\":\"risk_level\"},{\"name\":\"complianceFlags\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"compliance_flags\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"}],\"dbName\":\"system_logs\"},\"LogRetentionPolicy\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"retentionDays\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"retention_days\"},{\"name\":\"archiveDays\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"archive_days\"},{\"name\":\"lastCleanup\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"last_cleanup\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"log_retention_policy\"},\"PasswordReset\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"expires_at\"},{\"name\":\"used\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"}],\"dbName\":\"password_resets\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {}
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

